rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Development rules: Allow all authenticated users to read and write their own documents
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      
      // Specific feature permissions
      match /features/{featureName} {
        allow read, write: if isAuthenticated() && request.auth.uid == userId;
      }
    }

    // Usage limits tracking
    match /usage_limits/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Meal suggestions
    match /meal_suggestions/{suggestionId} {
      allow read, write: if isAuthenticated();
    }

    // Image analysis results
    match /image_analysis/{analysisId} {
      allow read, write: if isAuthenticated();
    }

    // User actions logging
    match /user_actions/{actionId} {
      allow create: if isAuthenticated();
      allow read, delete: if isAuthenticated();
    }

    // Calendar entries
    match /calendar_entries/{entryId} {
      allow read, write: if isAuthenticated();
    }

    // Nutrition tracking
    match /nutrition_logs/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Default fallback (very restrictive)
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
